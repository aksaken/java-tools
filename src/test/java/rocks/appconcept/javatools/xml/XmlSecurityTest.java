package rocks.appconcept.javatools.xml;

import junit.framework.TestCase;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import java.io.ByteArrayInputStream;
import java.security.PrivateKey;
import java.security.cert.Certificate;
import java.util.Base64;

/**
 * @author yanimetaxas
 */
public class XmlSecurityTest extends TestCase {

    public void testValidateSignature() throws Exception {
    }

    public void testDecryptElement() throws Exception {

        String responseXml = "";
        String privateKey = "MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCLRclEsOtxtLKpR3xcbgGDE5tAxgsCQQ2WYk6wASmXXExptSKrVfi/QVzxloKlQTd8UYQ0wRaAGOdBRQTRa1VSHkk8yy6SiV/2qWNsmQKS8dcfc7hR6fu8Dag1Ba3hsr3pKlcAOlkoW+mTgPtu0o6BT81qaOKrAcjh8jyQUkrAoElyFE9RB0LiWNFGYYitKelj63bn93coZfBt71nYwYbLaHIDS2A5a5yEgr7W8AooFSH2cMRd+vzT7FbrzTDlOofINypta9CxdeEfTJkt8g0o1Lr8iiMc+wHLu1/foKT0fk/D7U8+7o3MEVLPlmQLwrOtLq+5ldz8iZiueF4xCyqpAgMBAAECggEAIe+KQFufsyAlnIvXqKoBYlAHt3vKOO1jAy7HH6nY2ZHa6LMDVJ5pMykZHaDgCqZef8NZJIWcFvB6gPPxXZn6uzy3+cFEgt5IbNEPcenCr82P7pEC66rI9SSaxPiyStmD3um7M0oEaYoj2xZFrdZOdQHd+ry95o9TxIKC8WOr5U2NICj5xkqTI52LH1FjN98I/VYRoLZeBXUKsiB+7tAhA1EVAplVlnAu+Mlyn2tN5cW3ktO8IvRjdkNCfN1bZVCjf+suV8BmS9AfLe4+f9fu1wdhso0erQN9JwtdhQNeksQH9Z9C8xCsTsNu5AvtvQO7rjdPaB0xu6ro1nOOlImJhQKBgQC1cbVvvOTbwAFUykc+EmKdvVRydFeNqAcOecRqxNfpJz1MPs02yaXChV9LwCs7C6jjkLsOh8V/jkkIP0YOiYTQUQNJORFfhiFgssDHhrLdUcky/LXngmzyY6HENO+x+Gj4zrkTIPFT3Nly8k8hddNUOwdefIOhAQlpNPrSSxCo+wKBgQDEgAIeYlH9/9kV53yRuvLi3aO/IwleYwAvSO/XquBFwHpV8i0CeAAeLV2GBhTlJwqkHyb0THpJuMLssKqXOtyUNFOBOkXbf/emXmJKp4Mt/z9U/VTEJ3cd+GdA5JCrUt2m9VhDdEIjSqXF3s3gWSdbsgmaD5TbmxyXp5bkHaLxqwKBgQCw6A74xPl2cHxbyWUw1ggkt+ZQObLrwLowmPSzDP1erA2N+2VmV7EwOY2yc8kypqmiRwi6oBIlzfrS+a46mkZOPc6wY93WfxaoC2D+qQxX0VgUSGSrNnU214FvphVWNldSz2uPhP0GwTuaYTpZ62GCrJMAwvIr1rDwTOGIi/vQZQKBgCiNVmKY3dzycQWhOUcF8tw463MlsuhEvCQGBGFYxWH/v/9+tCU/SJ7xs8xV8vf7n6mROEPQiKgwNiIMr5f4MM9xIQ6ZTRNojF5MOjK38U2L0LEketrkXiPUQNLWmLiSqGWtWmLJWmDYJe/49DnpjELTMkIWFx1fHH57upsnNppzAoGBAKK7rnrZpq31xFDIqLzR49qA3osG30vffE2bAwChPcAv3FvwGWKKu5SxEMdQeEKQWo/SgtiOE05wNyPhO0qWyqOPZlEzQEA9uoknMzKkTMgN5UNZRGiUIjqmmEte0yh1gEc33dJoKn4YjovhaM8dTzPZiUpcQeLk37MU+tcS+DUQ";
        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
        dbf.setNamespaceAware(true);
        DocumentBuilder builder = dbf.newDocumentBuilder();
        Document doc = builder.parse(new ByteArrayInputStream(Base64.getDecoder().decode(responseXml)));
        NodeList assertion = doc.getElementsByTagNameNS("urn:oasis:names:tc:SAML:2.0:assertion", "Assertion");
        NodeList encryptedAssertion = doc.getElementsByTagNameNS("urn:oasis:names:tc:SAML:2.0:assertion", "EncryptedAssertion");

        assertEquals(0, assertion.getLength());
        assertEquals(1, encryptedAssertion.getLength());

        XmlSecurity.decryptElement((Element) encryptedAssertion.item(0), privateKey);

        assertEquals(1, assertion.getLength());

    }

    public void testParseRSAKey() throws Exception {
        try {
            XmlSecurity.parseCertificate("abc");
            fail();
        } catch (Exception ignored) {
        }
        PrivateKey privateKey = XmlSecurity.parseRSAKey("MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCLRclEsOtxtLKpR3xcbgGDE5tAxgsCQQ2WYk6wASmXXExptSKrVfi/QVzxloKlQTd8UYQ0wRaAGOdBRQTRa1VSHkk8yy6SiV/2qWNsmQKS8dcfc7hR6fu8Dag1Ba3hsr3pKlcAOlkoW+mTgPtu0o6BT81qaOKrAcjh8jyQUkrAoElyFE9RB0LiWNFGYYitKelj63bn93coZfBt71nYwYbLaHIDS2A5a5yEgr7W8AooFSH2cMRd+vzT7FbrzTDlOofINypta9CxdeEfTJkt8g0o1Lr8iiMc+wHLu1/foKT0fk/D7U8+7o3MEVLPlmQLwrOtLq+5ldz8iZiueF4xCyqpAgMBAAECggEAIe+KQFufsyAlnIvXqKoBYlAHt3vKOO1jAy7HH6nY2ZHa6LMDVJ5pMykZHaDgCqZef8NZJIWcFvB6gPPxXZn6uzy3+cFEgt5IbNEPcenCr82P7pEC66rI9SSaxPiyStmD3um7M0oEaYoj2xZFrdZOdQHd+ry95o9TxIKC8WOr5U2NICj5xkqTI52LH1FjN98I/VYRoLZeBXUKsiB+7tAhA1EVAplVlnAu+Mlyn2tN5cW3ktO8IvRjdkNCfN1bZVCjf+suV8BmS9AfLe4+f9fu1wdhso0erQN9JwtdhQNeksQH9Z9C8xCsTsNu5AvtvQO7rjdPaB0xu6ro1nOOlImJhQKBgQC1cbVvvOTbwAFUykc+EmKdvVRydFeNqAcOecRqxNfpJz1MPs02yaXChV9LwCs7C6jjkLsOh8V/jkkIP0YOiYTQUQNJORFfhiFgssDHhrLdUcky/LXngmzyY6HENO+x+Gj4zrkTIPFT3Nly8k8hddNUOwdefIOhAQlpNPrSSxCo+wKBgQDEgAIeYlH9/9kV53yRuvLi3aO/IwleYwAvSO/XquBFwHpV8i0CeAAeLV2GBhTlJwqkHyb0THpJuMLssKqXOtyUNFOBOkXbf/emXmJKp4Mt/z9U/VTEJ3cd+GdA5JCrUt2m9VhDdEIjSqXF3s3gWSdbsgmaD5TbmxyXp5bkHaLxqwKBgQCw6A74xPl2cHxbyWUw1ggkt+ZQObLrwLowmPSzDP1erA2N+2VmV7EwOY2yc8kypqmiRwi6oBIlzfrS+a46mkZOPc6wY93WfxaoC2D+qQxX0VgUSGSrNnU214FvphVWNldSz2uPhP0GwTuaYTpZ62GCrJMAwvIr1rDwTOGIi/vQZQKBgCiNVmKY3dzycQWhOUcF8tw463MlsuhEvCQGBGFYxWH/v/9+tCU/SJ7xs8xV8vf7n6mROEPQiKgwNiIMr5f4MM9xIQ6ZTRNojF5MOjK38U2L0LEketrkXiPUQNLWmLiSqGWtWmLJWmDYJe/49DnpjELTMkIWFx1fHH57upsnNppzAoGBAKK7rnrZpq31xFDIqLzR49qA3osG30vffE2bAwChPcAv3FvwGWKKu5SxEMdQeEKQWo/SgtiOE05wNyPhO0qWyqOPZlEzQEA9uoknMzKkTMgN5UNZRGiUIjqmmEte0yh1gEc33dJoKn4YjovhaM8dTzPZiUpcQeLk37MU+tcS+DUQ");
        assertEquals("RSA", privateKey.getAlgorithm());
    }

    public void testParseCertificate() throws Exception {

        Certificate certificate = XmlSecurity.parseCertificate("-----BEGIN CERTIFICATE-----\n" +
                "MIIGWDCCBECgAwIBAgIBAjANBgkqhkiG9w0BAQUFADCBpjELMAkGA1UEBhMCVVMx\n" +
                "DzANBgNVBAgTBm9yZWdvbjEpMCcGA1UEChMgRGFpbWxlciBUcnVja3MgTm9ydGgg\n" +
                "QW1lcmljYSBMTEMxCzAJBgNVBAsTAklUMSkwJwYDVQQDEyBEYWltbGVyIEludGVy\n" +
                "bWVkaWF0ZSBDZXJ0aWZpY2F0ZTEjMCEGCSqGSIb3DQEJARYUaWFtZ3JvdXBAZGFp\n" +
                "bWxlci5jb20wHhcNMTEwOTI5MDgxMDU1WhcNMjEwOTI2MDgxMDU1WjCBujELMAkG\n" +
                "A1UEBhMCVVMxDzANBgNVBAgTBm9yZWdvbjERMA8GA1UEBxMIcG9ydGxhbmQxKTAn\n" +
                "BgNVBAoTIERhaW1sZXIgVHJ1Y2tzIE5vcnRoIEFtZXJpY2EgTExDMQswCQYDVQQL\n" +
                "EwJJVDEqMCgGA1UEAxMhaWRwLWR0bmEtdGVzdC5xYS5mcmVpZ2h0bGluZXIuY29t\n" +
                "MSMwIQYJKoZIhvcNAQkBFhRpYW1ncm91cEBkYWltbGVyLmNvbTCCAiIwDQYJKoZI\n" +
                "hvcNAQEBBQADggIPADCCAgoCggIBAJoYG2EYY6XjsxdGnBX7q3XpgAmgUCg1wQLp\n" +
                "PzK/TuTP0GJW1Ll3b2FKnO3K2pI/56i1wXTN9/KSa+3CCDtAVZqcR0PMO+w0QEPN\n" +
                "i7FMsaWj0XbbQ3usS5rmZHydSHXlOMQt43urVDdZScnJ0LXSBMq0X6GS1/z7bw0O\n" +
                "L+7HuJ8HbybGUt/IGj1ov1cXgYyc9150Byb3+NSJucuDNW0ndW12KBwHi3FLvyg0\n" +
                "yeZQqKSb/NHlakRyoeuJYiCY5fNWlw7tUUkbWw/JX5Kd+Z6OIsx58ClDnR5b85Pq\n" +
                "NNeCMZW2VNH0yrZ39tRFX2z75OsAjPhcBsLBqbOTg6A9Uh5IXysXkuG6giHT4zDT\n" +
                "GpVqueKBg/MyG7fsyDqHO59JLaK1ygzOKCXPAzXCcgBagw/5A0EEPv9fdHukZBZ7\n" +
                "B/kgPH1/gszZ6mMXHog31UrTVliLWcYVyBlQuk8BL9ARn6IT6o9NTnM0RP5wZr5d\n" +
                "0Xi7NgyQwTFhHDL+9QT3fa38Nw3wgoRSsFUF0YNDXgs9R3jh+6d6g/gQnRSWt7eO\n" +
                "5Y9bxlM8ABNtMIILp1AYJD8fZ7Dp2OZLoDAqppDdyTKSTOrK2bVXhJNm/hGd3mOJ\n" +
                "NG0wlXuHXBTDPgC923fxEicw3N5E3YF7q2dErh92eQOeumhanfuHw8P3rLpmPpVa\n" +
                "ULoyjFgjAgMBAAGjezB5MAkGA1UdEwQCMAAwLAYJYIZIAYb4QgENBB8WHU9wZW5T\n" +
                "U0wgR2VuZXJhdGVkIENlcnRpZmljYXRlMB0GA1UdDgQWBBSY8hPDgo4PksgJGNt2\n" +
                "db8zFv6OrTAfBgNVHSMEGDAWgBSw1RelCkOFT/YW9o2504F/4uYSZjANBgkqhkiG\n" +
                "9w0BAQUFAAOCAgEAK8jahrwq7p763CNnOgvkXiUm6c4FXMe8zPHN4tfBPLFmEN3m\n" +
                "mXsxXYHXb1XLLuk59hR5ploqGS4b2lxaq0BqLM+qPGKfo+0iytu+YI50JCMH2fXI\n" +
                "szdlt4XsnM8IjgH8gYernIZm/nuMN+JoHF06tAZyVTwd01FIZc7Im7DdCS5RQ7qb\n" +
                "7bucVAVcm/tff4TFrDqQSPqL3dak0un+hziqNbpj1AJkY+vzAOqIUsNjw1NsEymZ\n" +
                "FD1uVfVBwglDMWgnLS8eY5PHjBdjgUPPvw9gZe6X3i0PFAl+BWVCbcMtb1MdZ8LT\n" +
                "RYFNkeGhPyUq7dunyxOF8kyKbHhwoxjuWV0fCacuaubT3Rh5drdpiDOeX3DonkQd\n" +
                "/mR4FqVRnaH13wa/D7Rk6Db6yjs/43j0bSSQTSXwn3psl+eL7adVA+2k+p8jOy4x\n" +
                "t3/8FUR4xGj3I5gLILKPiH0LfyZ9N5UmxMZKi9fVmp0lN5bko9ShiFf7oRqmDI0V\n" +
                "nVuXldW5StsEFU0SBiyTQ/L7TH9GK3s4PsAjMQ6hbpD4YGwwe8/hbKhk6rbOFf2v\n" +
                "3Aaws9Wgm7HLrBNo9bhyGtnNxEdng3vgLEpJitj6HgOQ7WwTy1zhGQjLVxBn+ifU\n" +
                "nZRO8T4c1U7jGHZDjvf+JmNTAt9E3ihwdXI3d32Mb9J8I46qNuOTTtesrbc=\n" +
                "-----END CERTIFICATE-----\n");

        assertEquals("X.509", certificate.getType());

        try {
            XmlSecurity.parseCertificate(null);
            fail();
        } catch (Exception ignored) {
        }
        try {
            XmlSecurity.parseCertificate("123");
            fail();
        } catch (Exception ignored) {
        }
    }

}